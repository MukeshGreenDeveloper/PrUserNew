<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="bz.pei.driver">
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <uses-feature
        android:name="android.hardware.camera"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.location.gps"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.location.network"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.camera.front"
        android:required="true" />

    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />

    <!-- SyncAdapters are available in API 5 and above. We use API 7 as a baseline for samples. -->
    <!-- Min/target SDK versions (<uses-sdk>) managed by build.gradle -->


    <!-- Required for fetching feed data. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
<!--    <uses-permission android:name="android.permission.BIND_ACCESSIBILITY_SERVICE" />-->

    <supports-screens
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />

    <application
        android:name="bz.pei.driver.app.MyApp"
        android:allowBackup="true"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/Map_key" />

        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <meta-data
            android:name="io.fabric.ApiKey"
            android:value="7581ed2f58a7dc171ef9aced80753e8d45c917f7" />

        <receiver
            android:name="bz.pei.driver.Sync.SensorRestarterBroadcastReceiver"
            android:exported="true"
            android:label="RestartServiceWhenStopped" />

        <service
            android:name="bz.pei.driver.Sync.SensorService"
            android:exported="true">
            <intent-filter>
                <action android:name="bz.pei.driver.Sync.ActivityRecognition.RestartSensor" />
            </intent-filter>
        </service>
        <!--
             ContentProvider to store feed data.

               The "authorities" here are defined as part of a ContentProvider interface. It's used here
               as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
               SyncService.java.

               Since this ContentProvider is not exported, it will not be accessible outside of this app's
               package.
        -->
        <provider
            android:name="bz.pei.driver.Sync.provider.FeedProvider"
            android:authorities="bz.pei.driver.Sync"
            android:exported="false" />

        <!--
        This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it.
        -->
        <service
            android:name="bz.pei.driver.Sync.SyncService"
            android:exported="true"
            android:process=":sync">

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name="bz.pei.driver.Sync.common.accounts.GenericAccountService">

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <activity
            android:name="bz.pei.driver.ui.acceptreject.AcceptRejectActivity"
            android:screenOrientation="portrait"
            android:launchMode="singleInstance"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.signupscreen.TermsandCons"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <!--
                    <activity
                    android:name=".ui.AcceptReject.ShareAcceptReject"
                    android:screenOrientation="portrait"
                    android:windowSoftInputMode="stateAlwaysHidden"/>
        -->
        <activity
            android:name="bz.pei.driver.ui.splash.SplashActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden"></activity>
        <activity
            android:name="bz.pei.driver.ui.main.MainActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.signupscreen.SignupActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.login.LoginActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.drawerscreen.DrawerAct"
            android:launchMode="singleInstance"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.history.HistoryActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.forgot.ForgetPwdActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />
        <activity
            android:name="bz.pei.driver.ui.login.loginviaotp.LoginOTPActivity"
            android:launchMode="singleInstance"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="bz.pei.driver.ui.login.otpscreen.OTPActivity"
            android:launchMode="singleInstance"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="stateAlwaysHidden" />

        <service android:name="bz.pei.driver.fcm.MyFirebaseMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service android:name="bz.pei.driver.fcm.MyFirebaseInstanceIDService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@mipmap/ic_launcher" />
        <!--
             Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more.
        -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/colorAccent" />

        <service
            android:name="bz.pei.driver.utilz.Location.LocationUpdatesService"
            android:exported="true">
            <intent-filter>
                <action android:name="ocation_updating_service" />
            </intent-filter>
        </service>

        <!-- for triggering an app when restart -->
        <!--
        <service
            android:name=".utilz.MyAccessibilityService"
            android:label="@string/app_name"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService"/>
            </intent-filter>

            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/my_accessibility_service"/>
        </service>
        -->

        <receiver
            android:name="bz.pei.driver.Sync.SyncRestartReceiver"
            android:enabled="true"
            android:exported="true"
            android:label="RestartServiceWhenStopped">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
                <action android:name="restartservice" />
            </intent-filter>
        </receiver>

        <service
            android:name="bz.pei.driver.Sync.MyJobIntentService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity android:name="bz.pei.driver.ui.splash.SplashScreen"
            android:theme="@style/SpeedyBrandTheme"></activity>
    </application>

</manifest>